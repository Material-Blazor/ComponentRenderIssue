@page "/"
@namespace ComponentRenderIssues

<h1>Hello, world!</h1>
<br />
<MBButton Label="Show Customization Dialog #1"
          ButtonStyle="MBButtonStyle.ContainedRaised"
          @onclick="@ShowCustomizationAsync" />

<br />
<br />

<MBButton Label="Show Customization Dialog #2"
          ButtonStyle="MBButtonStyle.ContainedRaised"
          @onclick="@ShowCustomization2Async" />

<MBDialog Title="Customize with incorrect rendering in SimpleComponent"
          style="width: 70%;"
          @ref="CustomizationDialogReference">
    <Body>
        <SimpleComponent />
        <br />
        <MBDatePicker @bind-Value="CurrentDateTime"
                      Disabled="DPDisabled"
                      style="margin: 0.5em;" />
        <MBSelect Items="SortDirectionItems"
                  @bind-Value="SortDirection"
                  Disabled="DPDisabled"
                  style="margin: 0.5em;" />
        <br />
        <br />
        <MBButton Label="Toggle Disable on MBDatePicker & MBSelect"
                  ButtonStyle="MBButtonStyle.ContainedRaised"
                  @onclick="@ToggleDisabled" />
        <br />
        <br />
        Disabled is currently @DPDisabled
        <br />
        <br />
        <MultiSelectListComponent ItemArray="@Items" />
    </Body>
</MBDialog>

<CustomizationDialog @ref="CustomizationDialogReference2" />

@code {
    private bool DPDisabled { get; set; } = false;
    private MBDialog CustomizationDialogReference { get; set; }
    private CustomizationDialog CustomizationDialogReference2 { get; set; }
    private DateTime CurrentDateTime { get; set; } = DateTime.Now;
    private MBListElement<int>[] SortDirectionItems { get; set; } = new MBListElement<int>[]
        {
                new MBListElement<int>{
                    SelectedValue = 0,
                    Label = "Ascending"},
                new MBListElement<int>{
                    SelectedValue = 1,
                    Label = "Descending"},
                new MBListElement<int>{
                    SelectedValue = 2,
                    Label = "Descending"},
                new MBListElement<int>{
                    SelectedValue = 3,
                    Label = "Descending"},
                new MBListElement<int>{
                    SelectedValue = 4,
                    Label = "Descending"},
                new MBListElement<int>{
                    SelectedValue = 5,
                    Label = "Descending"},
                new MBListElement<int>{
                    SelectedValue = 6,
                    Label = "Descending"},
                new MBListElement<int>{
                    SelectedValue = 7,
                    Label = "Descending"},
                new MBListElement<int>{
                    SelectedValue = 8,
                    Label = "Descending"},
                                                        };
    private int SortDirection { get; set; }

    MultiSelectListComponent.MultiSelectListElement[] Items = new MultiSelectListComponent.MultiSelectListElement[]
    {
        new MultiSelectListComponent.MultiSelectListElement { Label = "British Shorthair" },
        new MultiSelectListComponent.MultiSelectListElement { Label = "Russian Blue", IsSelected=true },
        new MultiSelectListComponent.MultiSelectListElement { Label = "Icelandic Invisible", IsSelected=true }
                            };
    private async Task ShowCustomizationAsync()
    {
        await CustomizationDialogReference.ShowAsync();
    }

    private async Task ShowCustomization2Async()
    {
        await CustomizationDialogReference2.OpenDialogAsync();
    }

    private void ToggleDisabled()
    {
        DPDisabled = !DPDisabled;
    }

}